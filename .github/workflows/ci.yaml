name: CI

on: push

jobs:
    #
    # Console
    #

    # PHP coding style
    console-php-cs:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: console
        steps:
            - uses: actions/checkout@master

            - uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.1'
                  coverage: none
                  tools: symfony-cli

            - name: Install php-cs-fixer
              run: symfony composer php-cs-fixer-install

            - name: Run php-cs-fixer
              run: symfony composer php-cs-fixer-check

    # Translations
    console-translations:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master

            - uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.1'
                  coverage: none
                  tools: symfony-cli

            - name: Install translations-checker
              run: symfony composer translations-checker-install

            - name: Run translations-checker
              run: symfony composer translations-checker-check

    # JS coding style
    console-js-legacy-prettier:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: console
        steps:
            - uses: actions/checkout@master

            - uses: actions/setup-node@v2
              with:
                  node-version: '22'

            - name: Install legacy JavaScript dependencies
              run: cd assets/legacy && yarn install

            - name: Check legacy coding style
              run: cd assets/legacy && yarn prettier --check js-stimulus ts-react --config .prettierrc.json

            - name: Install projects JavaScript dependencies
              run: cd assets/projects && yarn install

            - name: Check projects coding style
              run: cd assets/projects && yarn prettier --check . --config .prettierrc.json

    # JS tests
    console-js-legacy-tests:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: console
        steps:
            - uses: actions/checkout@master

            - uses: actions/setup-node@v2
              with:
                  node-version: '22'

            - name: Install JavaScript dependencies
              run: cd assets/legacy && yarn install

            - name: Jest
              run: cd assets/legacy && yarn test

    # JS build
    console-js-legacy-build:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: console
        steps:
            - uses: actions/checkout@master

            - uses: actions/setup-node@v2
              with:
                  node-version: '22'

            - name: Install JavaScript dependencies
              run: cd assets/legacy && yarn install

            - name: Build JavaScript
              run: cd assets/legacy && yarn build

            - name: Install projects JavaScript dependencies
              run: cd assets/projects && yarn install

            - name: Build projects JavaScript
              run: cd assets/projects && yarn build

    # PHP tests
    console-php-tests:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master

            - uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.1'
                  coverage: none
                  tools: symfony-cli
                  extensions: redis

            - name: Prepare services
              run: cp compose.override.yaml.dist compose.override.yaml

            - name: Start services
              run: docker compose up -d --quiet-pull

            - name: Install PHP dependencies
              run: cd console && symfony composer install --prefer-dist --no-interaction --no-ansi --no-progress

            - name: Setup assets fixtures
              run: cd console && cp -R tests/Fixtures/assets/* public/

            - name: Prepare database
              run: cd console && symfony console doctrine:migrations:migrate -n -e test && symfony console doctrine:fixtures:load -n --group test -e test

            - name: Prepare Meilisearch
              run: cd console && symfony console app:search:index-crm

            - name: 'PHPUnit (group: transactions enabled)'
              run: cd console && symfony php bin/phpunit --exclude-group without-transaction

            - name: 'PHPUnit (group: transactions disabled)'
              run: cd console && symfony php bin/phpunit --group without-transaction

    # Release
    console-release:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: console
        needs:
            - console-php-cs
            - console-translations
            - console-js-legacy-prettier
            - console-js-legacy-tests
            - console-js-legacy-build
            - console-php-tests
        if: github.ref == 'refs/heads/main'
        steps:
            - uses: actions/checkout@master

            - uses: actions/setup-node@v2
              with:
                  node-version: '22'

            - uses: azure/docker-login@v1
              with:
                  login-server: ghcr.io
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Install legacy JavaScript dependencies
              run: cd assets/legacy && yarn install

            - name: Build legacy JavaScript
              run: cd assets/legacy && yarn build

            - name: Install modern JavaScript dependencies
              run: cd assets/modern && yarn install

            - name: Build modern JavaScript
              run: cd assets/modern && yarn build

            - name: Install projects JavaScript dependencies
              run: cd assets/projects && yarn install

            - name: Build projects JavaScript
              run: cd assets/projects && yarn build

            - name: Build and publish console production image
              uses: elgohr/Publish-Docker-Github-Action@master
              with:
                  name: ${{ github.repository }}/console
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}
                  registry: ghcr.io
                  workdir: console
                  dockerfile: Dockerfile

    #
    # Public
    #

    # PHP coding style
    public-php-cs:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: public
        steps:
            - uses: actions/checkout@master

            - uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.1'
                  coverage: none
                  tools: symfony-cli

            - name: Install php-cs-fixer
              run: symfony composer php-cs-fixer-install

            - name: Run php-cs-fixer
              run: symfony composer php-cs-fixer-check

    # Translations
    public-translations:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master

            - uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.1'
                  coverage: none
                  tools: symfony-cli

            - name: Install translations-checker
              run: symfony composer translations-checker-install

            - name: Run translations-checker
              run: symfony composer translations-checker-check

    # Tests
    public-tests:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master

            - uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.1'
                  coverage: none
                  extensions: redis
                  tools: symfony-cli

            - name: Prepare services
              run: cp compose.override.yaml.dist compose.override.yaml

            - name: Start services
              run: docker compose up -d --quiet-pull

            - name: Install Console PHP dependencies
              run: cd console && symfony composer install --prefer-dist --no-interaction --no-ansi --no-progress

            - name: Install Public PHP dependencies
              run: cd public && symfony composer install --prefer-dist --no-interaction --no-ansi --no-progress

            - name: Setup assets fixtures
              run: |
                  cp -R console/tests/Fixtures/assets/* console/public/
                  cp -R public/tests/Fixtures/assets public/public/build

            - name: Prepare database
              run: cd console && symfony console doctrine:migrations:migrate -n && symfony console doctrine:fixtures:load -n --group test

            - name: Prepare domains
              run: cd console && symfony console app:proxy:refresh-domains-cache -n

            - name: PHPUnit
              run: |
                  cd console
                  symfony server:ca:install
                  symfony serve -d
                  cd ../public
                  symfony php bin/phpunit

    # Release
    public-release:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: public
        needs:
            - public-php-cs
            - public-translations
            - public-tests
        if: github.ref == 'refs/heads/main'
        steps:
            - uses: actions/checkout@master

            - uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.1'
                  coverage: none
                  extensions: redis
                  tools: symfony-cli

            - uses: azure/docker-login@v1
              with:
                  login-server: ghcr.io
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Install PHP dependencies
              run: symfony composer install --prefer-dist --no-interaction --no-ansi --no-progress --no-scripts

            - name: Install JavaScript dependencies
              run: yarn install

            - name: Build JavaScript
              run: yarn build

            - name: Build and publish public production image
              uses: elgohr/Publish-Docker-Github-Action@master
              with:
                  name: ${{ github.repository }}/public
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}
                  registry: ghcr.io
                  workdir: public
                  dockerfile: Dockerfile
