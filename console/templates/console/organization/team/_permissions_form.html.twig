{% set editablePermissions = {
    'website': {
        'pages': [
            'website_pages_manage',
            'website_pages_manage_categories',
        ],

        'posts': [
            'website_posts_manage_drafts',
            'website_posts_publish',
            'website_posts_manage_published',
            'website_posts_manage_categories',
        ],

        'documents': [
            'website_documents_manage',
        ],

        'trombinoscope': [
            'website_trombinoscope_manage_drafts',
            'website_trombinoscope_publish',
            'website_trombinoscope_manage_published',
            'website_trombinoscope_manage_categories',
        ],

        'manifesto': [
            'website_manifesto_manage_drafts',
            'website_manifesto_publish',
            'website_manifesto_manage_published',
        ],

        'stats': [
            'website_access_stats',
        ]
    },
    'community': {
        'contacts': [
            'community_contacts_view',
            'community_contacts_update',
            'community_contacts_delete',
            'community_contacts_tag_add',
        ],

        'emailing': [
            'community_emailing_manage_drafts',
            'community_emailing_send',
            'community_emailing_stats',
        ],

        'texting': [
            'community_texting_manage_drafts',
            'community_texting_send',
            'community_texting_stats',
        ],

        'phoning': [
            'community_phoning_manage_drafts',
            'community_phoning_manage_active',
            'community_phoning_stats',
        ],

        'printing': [
            'community_printing_manage_drafts',
            'community_printing_order',
            'community_printing_stats',
        ],

        'events': [
            'website_events_manage_drafts',
            'website_events_publish',
            'website_events_manage_published',
        ],

        'forms': [
            'website_forms_manage',
            'website_forms_access_results',
        ],

        'stats': [
            'community_access_stats',
        ],
    },
    'configuration': {
        'settings': [
            'project_config_appearance',
            'project_config_socials',
        ],

        'developer': [
            'project_developer_theme',
            'project_developer_redirections',
            'project_developer_access',
        ],
    },
} %}

{# Prepare translations #}

{% set permissionsTranslations = {} %}
{% for section, categories in editablePermissions %}
    {% set permissionsTranslations = permissionsTranslations|merge({
        (section): ('permissions.' ~ section)|trans({}, 'organization_team')
    }) %}

    {% for category, permissions in categories %}
        {% set permissionsTranslations = permissionsTranslations|merge({
            (category): ('permissions.' ~ category)|trans({}, 'organization_team')
        }) %}

        {% for permission in permissions %}
            {% set permissionsTranslations = permissionsTranslations|merge({
                (permission): ('permissions.' ~ permission)|trans({}, 'organization_team')
            }) %}
        {% endfor %}
    {% endfor %}
{% endfor %}

<div data-controller="sticky-top">
    <div {{ modern_react_component('Organization/Team/Permissions', {
        'definitions': editablePermissions,
        'projects': transform_collection(projects, 'App\\Api\\Transformer\\ProjectTransformer'),
        'isAdminField': field_name(form.isAdmin),
        'isAdminValue': member.isAdmin ? '1' : '0',
        'projectsPermissionsField': field_name(form.projectsPermissions),
        'projectsPermissionsValue': field_value(form.projectsPermissions),
        'translations': permissionsTranslations,
        'labels': {
            'is_admin_label': 'invite_member.is_admin'|trans({}, 'organization_team'),
            'grant_all_permissions': 'permissions.check_all'|trans({}, 'organization_team'),
        },
    }) }}></div>
</div>

{% if form.labels is defined %}
    <div class="mt-4 px-2 mb-2">
        <strong>
            {{ 'invite_member.labels.label'|trans({}, 'organization_team') }}
        </strong>
    </div>

    <div class="world-block p-3">
        <div data-controller="team--labels" style="height: 45px;" class="mb-1">
            {{ form_widget(form.labels, {'attr': {'data-team--labels-target': 'input'}}) }}
        </div>

        <small class="text-muted">
            {{ 'invite_member.labels.help'|trans({}, 'organization_team') }}
        </small>
    </div>
{% endif %}
